<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>hyperminhash</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <parent>
    <groupId>com.liveramp</groupId>
    <artifactId>pom-common</artifactId>
    <version>1.5</version>
  </parent>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>
    HyperMinHash is a probabilistic data structure that can approximate union, intersection, and set
    cardinalities as well as Jaccard indices of very large sets with high accuracy, in loglog space,
    and in a streaming fashion.
  </description>
  <url>www.github.com/LiveRamp/HyperMinHash-java</url>

  <scm>
    <connection>scm:git:git@github.com:LiveRamp/HyperMinHash-java.git</connection>
    <url>scm:git:git@github.com:LiveRamp/HyperMinHash-java.git</url>
    <developerConnection>scm:git:git@github.com:LiveRamp/HyperMinHash-java.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <name>Christian Hansen</name>
      <email>christianhshansen@gmail.com</email>
      <organization>LiveRamp</organization>
      <organizationUrl>www.liveramp.com</organizationUrl>
    </developer>
    <developer>
      <name>Harry Rackmil</name>
      <email>harryrackmil@gmail.com</email>
      <organization>LiveRamp</organization>
      <organizationUrl>www.liveramp.com</organizationUrl>
    </developer>
    <developer>
      <name>Shrif Nada</name>
      <email>snadalive@gmail.com</email>
      <organization>LiveRamp</organization>
      <organizationUrl>www.liveramp.com</organizationUrl>
    </developer>
  </developers>

  <properties>
    <skip.tests>false</skip.tests>
    <hadoop.version>2.5.0</hadoop.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <finalName>uber-${artifactId}-${version}</finalName>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <dependencies>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>com.adgear</groupId>
      <artifactId>metrohash</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>
  </dependencies>
  <distributionManagement>
    <!--
    Snapshots should be released to this repository on Sonatype. The parent POM contains the URL
    for the release repository, and its ID should be "ossrh".
    -->
    <repository>
      <id>ossrh-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </repository>
  </distributionManagement>
</project>
